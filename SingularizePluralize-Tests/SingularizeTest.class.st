Class {
	#name : #SingularizeTest,
	#superclass : #TestCase,
	#category : #'SingularizePluralize-Tests'
}

{ #category : #tests }
SingularizeTest >> testSingularOfAliases [
	self assert: 'aliases' asSingular equals: 'alias'
]

{ #category : #tests }
SingularizeTest >> testSingularOfArchieves [
	self assert: 'archieves' asSingular equals: 'archieve'
]

{ #category : #tests }
SingularizeTest >> testSingularOfAuditoria [
	self assert: 'auditoria' asSingular equals: 'auditorium'
]

{ #category : #tests }
SingularizeTest >> testSingularOfAuditorium [
	self assert: 'auditorium' asSingular equals: 'auditorium'
]

{ #category : #tests }
SingularizeTest >> testSingularOfAxes [
	self assert: 'axes' asSingular equals: 'axis'
]

{ #category : #tests }
SingularizeTest >> testSingularOfBananas [
	self assert: 'bananas' asSingular equals: 'banana'
]

{ #category : #tests }
SingularizeTest >> testSingularOfBeef [
	self assert: 'beef' asSingular equals: 'beef'
]

{ #category : #tests }
SingularizeTest >> testSingularOfBoxes [
	self assert: 'boxes' asSingular equals: 'box'
]

{ #category : #tests }
SingularizeTest >> testSingularOfBuses [
	self assert: 'buses' asSingular equals: 'bus'
]

{ #category : #tests }
SingularizeTest >> testSingularOfChildren [
	self assert: 'children' asSingular equals: 'child'
]

{ #category : #tests }
SingularizeTest >> testSingularOfColloquies [
	self assert: 'colloquies' asSingular equals: 'colloquy'
]

{ #category : #tests }
SingularizeTest >> testSingularOfCountries [
	self assert: 'countries' asSingular equals: 'country'
]

{ #category : #tests }
SingularizeTest >> testSingularOfData [
	self assert: 'data' asSingular equals: 'datum'
]

{ #category : #tests }
SingularizeTest >> testSingularOfDwarves [
	self assert: 'dwarves' asSingular equals: 'dwarf'
]

{ #category : #tests }
SingularizeTest >> testSingularOfEntities [
	self assert: 'entities' asSingular equals: 'entity'
]

{ #category : #tests }
SingularizeTest >> testSingularOfFeet [
	self assert: 'feet' asSingular equals: 'foot'
]

{ #category : #tests }
SingularizeTest >> testSingularOfFolk [
	self assert: 'folk' asSingular equals: 'folk'
]

{ #category : #tests }
SingularizeTest >> testSingularOfFriends [
	self assert: 'friends' asSingular equals: 'friend'
]

{ #category : #tests }
SingularizeTest >> testSingularOfGlasses [
	self assert: 'glasses' asSingular equals: 'glass'
]

{ #category : #tests }
SingularizeTest >> testSingularOfIndices [
	self assert: 'indices' asSingular equals: 'index'
]

{ #category : #tests }
SingularizeTest >> testSingularOfKnives [
	self assert: 'knives' asSingular equals: 'knife'
]

{ #category : #tests }
SingularizeTest >> testSingularOfLadies [
	self assert: 'ladies' asSingular equals: 'lady'
]

{ #category : #tests }
SingularizeTest >> testSingularOfLice [
	self assert: 'lice' asSingular equals: 'louse'
]

{ #category : #tests }
SingularizeTest >> testSingularOfLouse [
	self assert: 'louse' asSingular equals: 'louse'
]

{ #category : #tests }
SingularizeTest >> testSingularOfMatrices [
	self assert: 'matrices' asSingular equals: 'matrix'
]

{ #category : #tests }
SingularizeTest >> testSingularOfMedia [
	self assert: 'media' asSingular equals: 'medium'
]

{ #category : #tests }
SingularizeTest >> testSingularOfMen [
	self assert: 'men' asSingular equals: 'man'
]

{ #category : #tests }
SingularizeTest >> testSingularOfMice [
	self assert: 'mice' asSingular equals: 'mouse'
]

{ #category : #tests }
SingularizeTest >> testSingularOfMouse [
	self assert: 'mouse' asSingular equals: 'mouse'
]

{ #category : #tests }
SingularizeTest >> testSingularOfOctopi [
	self assert: 'octopi' asSingular equals: 'octopus'
]

{ #category : #tests }
SingularizeTest >> testSingularOfOx [
	self assert: 'ox' asSingular equals: 'ox'
]

{ #category : #tests }
SingularizeTest >> testSingularOfOxen [
	self assert: 'oxen' asSingular equals: 'ox'
]

{ #category : #tests }
SingularizeTest >> testSingularOfQuizzes [
	self assert: 'quizzes' asSingular equals: 'quiz'
]

{ #category : #tests }
SingularizeTest >> testSingularOfSelves [
	self assert: 'selves' asSingular equals: 'self'
]

{ #category : #tests }
SingularizeTest >> testSingularOfSheep [
	self assert: 'sheep' asSingular equals: 'sheep'
]

{ #category : #tests }
SingularizeTest >> testSingularOfShoes [
	self assert: 'shoes' asSingular equals: 'shoe'
]

{ #category : #tests }
SingularizeTest >> testSingularOfStatuses [
	self assert: 'statuses' asSingular equals: 'status'
]

{ #category : #tests }
SingularizeTest >> testSingularOfTheses [
	self assert: 'theses' asSingular equals: 'thesis'
]

{ #category : #tests }
SingularizeTest >> testSingularOfTomatoes [
	self assert: 'tomatoes' asSingular equals: 'tomato'
]

{ #category : #tests }
SingularizeTest >> testSingularOfVertices [
	self assert: 'vertices' asSingular equals: 'vertex'
]

{ #category : #tests }
SingularizeTest >> testSingularOfViri [
	self assert: 'viri' asSingular equals: 'virus'
]

{ #category : #tests }
SingularizeTest >> testSingularOfWives [
	self assert: 'wives' asSingular equals: 'wife'
]

{ #category : #tests }
SingularizeTest >> testSingularOfWomen [
	self assert: 'women' asSingular equals: 'woman'
]
